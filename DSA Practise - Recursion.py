maze = [
    ['s', '_', '#', '#', '_', '_', '_', '_', '_', '_', '_', '_', '_', '#', '#', '#'],
    ['#', '_', '#', '#', '_', '#', '#', '#', '#', '#', '_', '#', '#', '_', '#', '_'],
    ['#', '_', '_', '_', '_', '#', '_', '_', '_', '#', '_', '_', '_', '_', '#', '_'],
    ['#', '#', '#', '#', '_', '#', '#', '_', '#', '#', '#', '_', '#', '#', '#', '_'],
    ['#', '_', '_', '_', '_', '_', '#', '_', '_', '_', '_', '_', '_', '_', '_', '_'],
    ['#', '#', '_', '#', '#', '#', '#', '#', '#', '#', '#', '_', '_', '#', '_', '_'],
    ['#', '_', '_', '_', '#', '_', '_', '_', '#', '_', '_', '_', '#', '_', '_', '_'],
    ['#', '#', '#', '#', '_', '#', '#', '_', '#', '#', '#', '_', '#', '#', '#', '#'],
    ['#', '_', '_', '_', '#', '_', '_', '_', '#', '_', '_', '_', '#', '_', '_', '_'],
    ['#', '_', '#', '#', '_', '#', '#', '#', '#', '#', '#', '_', '#', '#', '_', '_'],
    ['#', '_', '#', '#', '_', '_', '_', '_', '_', '_', '_', '_', '#', '#', '_', '_'],
    ['#', '#', '#', '#', '_', '#', '#', '#', '#', '#', '_', '#', '#', '#', '#', '_'],
    ['#', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '#', '_', '_', '#', '_'],
    ['#', '#', '_', '#', '#', '#', '#', '#', '#', '#', '#', '#', '_', '_', '_', '_'],
    ['#', '_', '_', '_', '_', '_', '_', '_', '#', '_', '_', '_', '_', '_', '_', '_'],
    ['#', '#', '#', '#', '_', '#', '#', '_', '_', '_', '#', '_', '#', '#', '#', '#'],
]


maze[-1][-1] = 'o'


moves = [[+1,0],[0,1],[0,-1],[-1,0]]

visited = set()
path=[]
path.append([0,0])

def dps(maze,x,y):
	if not (0<=x<len(maze) and 0<=y<len(maze)):
		return False

	if maze[x][y] == "#" or (x,y) in visited:
		return False

	if maze[x][y] == "o":
		print('Path Found')
		return True

	maze[x][y] = '!'
	visited.add((x,y))
	path.append([x,y])

	for move in moves:
		if dps(maze,x+move[0],y+move[1]):
			return True


	path.pop()
	# maze[x][y] ='_'
	return False
			

dps(maze,0,0)
for row in maze:
	print(row)
